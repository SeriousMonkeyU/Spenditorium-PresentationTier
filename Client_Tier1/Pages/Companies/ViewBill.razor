@page "/ViewBill/{parameter}"
@using global::Shared.Models
@using Client_Tier1.Service
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject IClientService _clientService

<div class="mainHolder">
    <div class="bill-header">
        <h3>The bill</h3>
    </div>
    <div class="bill-item even-coloring">
        <span class="bill-item-category text-color">
            <div>Number of the bill: </div>
            <div>@bill.id</div>
        </span>
    </div>
    <div class="bill-item even-coloring">
        <span class="bill-item-category text-color">
            <div>Date: </div>
            <div></div>
            <div>@bill.billingdate.ToShortDateString()</div> -
            <div>@bill.duedate.ToShortDateString()</div>
        </span>
    </div>
    <div class="bill-item even-coloring">
        <span class="bill-item-category text-color">
            <div>Current market price: </div>
            <div>@bill.priceperitem dkk/@companyUnit</div>
        </span>
    </div>
    <div class="bill-item even-coloring">
        <span class="bill-item-category text-color">
            <div>Amount used: </div>
            <div>@bill.amount @companyUnit</div>
        </span>
    </div>
    <div class="space"></div>
    <div class="bill-header"></div>
    <div class="bill-item even-coloring">
        <span class="bill-item-category text-color">
            <div>Total amount to pay: </div>
            <div>@bill.total dkk</div>
        </span>
    </div>
    <div class="bill-item even-coloring">
        <span class="bill-item-category text-color">
            <div>Is paid?: </div>
            <div>@bill.paidstatus</div>
        </span>
    </div>

    <div class="buttonHolder">
        <p>Card Number: </p>
        <input type="text">
        <p>Card Name: </p>
        <input type="text">
        <p>CCV: </p>
        <input type="text">
        <div type="button" class="payButton" onclick="@TryPayment">Pay the bill</div>
    </div>
</div>


@code {

    private int id { get; set; } = -1;
        private const string idName = "id";

    // -----------------------------------------------

    [Parameter]
    public string? parameter { get; set; }


    private int billId { get; set; }
    private string companyname { get; set; }
    private List<Bill> bills { get; set; }
    private Bill bill;

    private string companyUnit = "";

    protected override async Task OnInitializedAsync()
    {
        try
        {
            int index = parameter.IndexOf("/");
            companyname = parameter.Substring(0, index);
            billId = int.Parse(parameter.Substring(index, parameter.Length));
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            throw;
        }

        id = await localStorage.GetItemAsync<int>(idName);
        bills = await _clientService.GetBillsById(id, companyname);

        try
        {
            bill = bills[billId - 1];

            switch (bill.provider)
            {
                case "Electricity":
                    companyUnit = "kWh";
                    break;
                case "Heating":
                    companyUnit = "m^3";
                    break;
                case "Housing":
                    companyUnit = "month";
                    break;
                case "Water":
                    companyUnit = "m^3";
                    break;
            }
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            throw;
        }
    }

    private void TryPayment() // to implement
    {
    }

}