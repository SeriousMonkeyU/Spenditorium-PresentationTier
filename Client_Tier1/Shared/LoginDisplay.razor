@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using global::Shared.DTO
@using HttpClient.Implementations

@inject NavigationManager Navigation


<label for="loginUsername">@error</label>
<div class="space"></div>
<input type="text" id="loginUsername" name="password" @bind="Username" @oninput="@((e) => { Username = (string)e.Value; })" required><br>
<div class="space"></div>
<input type="password" id="loginPassword" name="password" @bind="Password" @oninput="@((e) => { Password = (string)e.Value; })" required><br>
<div class="space"></div>
<button id="login" @onclick="SendLogin" class="loginBtn" IsToggle="false">Login</button>
<div class="space"></div>
<button id="register" @onclick="RedirectRegister" class="loginBtn" IsToggle="false">Sign Up</button>

@code{

    private string error = "";

    private string Username { get; set; } = "";
    private string Password { get; set; } = "";

    private async Task SendLogin()
    {
        HttpClient httpClient = new HttpClient();
        ClientHttpClient clientCreation = new ClientHttpClient(httpClient);

        bool tempAnswer = await clientCreation.Login(Username, Password);

        if (!tempAnswer)
        {
            error = "You are not logged in!";
        }

    //if(tempAnswer)
        Navigation.NavigateTo($"/");
    }

    private void RedirectRegister()
    {
        Navigation.NavigateTo($"/authentication/register");
    }
}